<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/22/2017 9:40:36 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MAC"
  DTS:CreatorName="MAC\rtroncoso"
  DTS:DTSID="{19BBAC0A-BA23-4171-BAD4-EDF69EAD57F4}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.92"
  DTS:LocaleID="2057"
  DTS:ObjectName="ImportHistoryByMinute"
  DTS:PackageType="5"
  DTS:VersionBuild="87"
  DTS:VersionGUID="{39BA032F-50A9-47B2-813E-D8CBEDE1C2E9}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED4BD8B8-5554-405E-84AB-BED7A0CD1570}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentStockId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{07AE29A6-E2F5-412D-AC6A-A673CA240487}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="HistoryByMinuteURL">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{34A98D48-2491-471C-8B1C-CDC92F4FED50}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RecordCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80B620C5-C00F-4EBA-8975-F7D379EEAD9F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Stocks">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C5E1A819-0DED-42F1-B454-528F2F42ACCB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="UpdatedUrl">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">21,7,OnError,19,OnExecStatusChanged,13,OnInformation,27,OnPipelinePostComponentCall,25,OnPipelinePostEndOfRowset,25,OnPipelinePostPrimeOutput,26,OnPipelinePreComponentCall,24,OnPipelinePreEndOfRowset,24,OnPipelinePrePrimeOutput,18,OnPipelineRowsSent,13,OnPostExecute,14,OnPostValidate,12,OnPreExecute,13,OnPreValidate,10,OnProgress,13,OnQueryCancel,12,OnTaskFailed,22,OnVariableValueChanged,9,OnWarning,10,Diagnostic,12,DiagnosticEx</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create Index"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7885f34d-437a-45e8-b29e-00be24583045}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Index"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{42F6D32A-F7BB-471D-AD95-CFAF6D29C0BE}"
          SQLTask:SqlStatementSource="IF NOT EXISTS (&#xA;&#x9;&#x9;SELECT 1&#xA;        FROM sys.indexes&#xA;        WHERE [name] = 'IX_stgPriceByMinute_StockId_Timestamp'&#xA;&#x9;)&#xA;CREATE CLUSTERED INDEX IX_stgPriceByMinute_StockId_Timestamp ON Stock.stgPriceByMinute(StockId, [Timestamp])&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{3c7671b4-8f25-4f66-b1ec-c2f4d940a287}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{50c767f2-b20d-4f7a-b32e-77325eb576ac}"
        DTS:ObjectName="{EBA28850-FB50-4950-B836-8BFB80BB0550}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::Stocks" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Download Stock Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{B77438D5-842F-4199-97B0-FE7FB5352F5B}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Download Stock Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Call CryptoCompare API"
                  validateExternalMetadata="False"
                  version="11">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="36">
                        <arrayElement
                          dataType="System.String"><![CDATA[PriceData.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SC_2d143923421e4fc199c2060b8d062f7f
{
    class PriceData
    {
        public Int64 Time { get; set; }
        public string StockId { get; set; }
        public decimal Close { get; set; }
        public decimal High { get; set; }
        public decimal Low { get; set; }
        public decimal Open { get; set; }
        public decimal VolumeFrom { get; set; }
        public decimal VolumeTo { get; set; }
    }
}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Net;
using System.IO;
using System.Text;
using System.Web.Script.Serialization;
using SC_2d143923421e4fc199c2060b8d062f7f;
using System.Windows.Forms;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>

    JavaScriptSerializer js = new JavaScriptSerializer();

    public override void PreExecute()
    {
        base.PreExecute();


    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        string stockId = Variables.CurrentStockId;
        string url = Variables.UpdatedUrl;

        var request = (HttpWebRequest)WebRequest.Create(url);

        request.Method = "GET";
        request.Headers.Add("ContentType", "application/json");

        var response = (HttpWebResponse)request.GetResponse();

        var responseString = new StreamReader(response.GetResponseStream()).ReadToEnd();

        PriceResponse prices;

        try
        {
            prices = js.Deserialize<PriceResponse>(responseString);
        }
        catch (Exception e)
        {
            MessageBox.Show(e.Message);
            throw;
        }

        foreach (PriceData p in prices.Data)
        {
            System.DateTime dtDateTime = new DateTime(1970, 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc);
            dtDateTime = dtDateTime.AddSeconds(p.Time).ToLocalTime();

            PriceDataBuffer.AddRow();
            PriceDataBuffer.Timestamp = p.Time;
            PriceDataBuffer.StockId = stockId;
            PriceDataBuffer.PriceDate = dtDateTime;
            PriceDataBuffer.ClosePrice = p.Close;
            PriceDataBuffer.HighPrice = p.High;
            PriceDataBuffer.LowPrice = p.Low;
            PriceDataBuffer.OpenPrice = p.Open;
            PriceDataBuffer.VolumeFrom = p.VolumeFrom;
            PriceDataBuffer.VolumeTo = p.VolumeTo;
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[PriceResponse.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SC_2d143923421e4fc199c2060b8d062f7f
{
    class PriceResponse
    {
        public string Response { get; set; }
        public int Type { get; set; }
        public bool Aggregated { get; set; }
        public List<PriceData> Data { get; set; }
        public Int64 TimeTo { get; set; }
        public Int64 TimeFrom { get; set; }
        public bool FirstValueInArray { get; set; }


    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class PriceDataBuffer: ScriptBuffer

{
    public PriceDataBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 Timestamp
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Timestamp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StockId
    {
        set
        {
            this[1] = value;
        }
    }
    public bool StockId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime PriceDate
    {
        set
        {
            this[2] = value;
        }
    }
    public bool PriceDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal ClosePrice
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ClosePrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal HighPrice
    {
        set
        {
            this[4] = value;
        }
    }
    public bool HighPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal LowPrice
    {
        set
        {
            this[5] = value;
        }
    }
    public bool LowPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal VolumeFrom
    {
        set
        {
            this[6] = value;
        }
    }
    public bool VolumeFrom_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal VolumeTo
    {
        set
        {
            this[7] = value;
        }
    }
    public bool VolumeTo_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal OpenPrice
    {
        set
        {
            this[8] = value;
        }
    }
    public bool OpenPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public PriceDataBuffer PriceDataBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != PriceDataBuffer)
        {
            PriceDataBuffer.SetEndOfRowset();
            PriceDataBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"PriceData"))
            {
                PriceDataBuffer = new PriceDataBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CurrentStockId
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CurrentStockId"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String UpdatedUrl
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["UpdatedUrl"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2d143923421e4fc199c2060b8d062f7f.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{454A5983-8F41-42B0-9586-2C8528DD2AD2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2d143923421e4fc199c2060b8d062f7f</RootNamespace>
    <AssemblyName>SC_2d143923421e4fc199c2060b8d062f7f</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="PriceResponse.cs" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="PriceData.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2d143923421e4fc199c2060b8d062f7f.Properties.Settings.get_Default():SC_2d143923421e4fc199c2060b8d062f7f.Properties.Sett" +
    "ings")]

namespace SC_2d143923421e4fc199c2060b8d062f7f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_2d143923421e4fc199c2060b8d062f7f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_2d143923421e4fc199c2060b8d062f7f</msb:DisplayName>
    <msb:ProjectId>{29A19EA8-305C-4CE5-8B9B-9326C95DE2E0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_2d143923421e4fc199c2060b8d062f7f.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="PriceResponse.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="PriceData.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2d143923421e4fc199c2060b8d062f7f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2d143923421e4fc199c2060b8d062f7f")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2d143923421e4fc199c2060b8d062f7f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2d143923421e4fc199c2060b8d062f7f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2d143923421e4fc199c2060b8d062f7f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2d143923421e4fc199c2060b8d062f7f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2d143923421e4fc199c2060b8d062f7f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2d143923421e4fc199c2060b8d062f7f.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM+Z51oAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAPkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOxFAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
RgAAAAAAAEgAAAACAAUA7CUAAEgfAAABAAAAAAAAADRFAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAkAfQEAAAEAABECewMAAARv
IgAABgoCewMAAARvIwAABigSAAAKdCEAAAElcgEAAHBvEwAACiVvFAAACnIJAABwciEAAHBvFQAA
Cm8WAAAKdCUAAAFvFwAACnMYAAAKbxkAAAoLAnsBAAAEB28BAAArDN4NbxsAAAooHAAACib+Gghv
KgAABm8dAAAKDTjYAAAAEgMoHgAAChMEEgUgsgcAABcXFhYWFhcoHwAAChIFEQRvMwAABmwoIAAA
ChMGEgYoIQAAChMFAnsEAAAEbxgAAAYCewQAAAQRBG8zAAAGbwYAAAYCewQAAAQGbwgAAAYCewQA
AAQRBW8KAAAGAnsEAAAEEQRvNwAABm8MAAAGAnsEAAAEEQRvOQAABm8OAAAGAnsEAAAEEQRvOwAA
Bm8QAAAGAnsEAAAEEQRvPQAABm8WAAAGAnsEAAAEEQRvPwAABm8SAAAGAnsEAAAEEQRvQQAABm8U
AAAGEgMoIgAACjoc////3g4SA/4WAgAAG28jAAAK3CoAAAABHAAAAABbAA9qAA0SAAABAgCDAOtu
AQ4AAAAASgJzJAAACn0BAAAEAigbAAAGKioCAwQFKCUAAAoqOgIWA4wtAAABKCYAAAoqWgMsCAIW
KCcAAAoqckMAAHBzKAAACnomAhcDKCYAAAoqWgMsCAIXKCcAAAoqckMAAHBzKAAACno6AhgDjBEA
AAEoJgAACipaAywIAhgoJwAACipyQwAAcHMoAAAKejoCGQOMFgAAASgmAAAKKloDLAgCGSgnAAAK
KnJDAABwcygAAAp6OgIaA4wWAAABKCYAAAoqWgMsCAIaKCcAAAoqckMAAHBzKAAACno6AhsDjBYA
AAEoJgAACipaAywIAhsoJwAACipyQwAAcHMoAAAKejoCHAOMFgAAASgmAAAKKloDLAgCHCgnAAAK
KnJDAABwcygAAAp6OgIdA4wWAAABKCYAAAoqWgMsCAIdKCcAAAoqckMAAHBzKAAACno6Ah4DjBYA
AAEoJgAACipaAywIAh4oJwAACipyQwAAcHMoAAAKeh4CKCkAAAoqHgIoKgAACioeAigrAAAKKn4C
KCwAAAoCAnMgAAAGfQIAAAQCAnMhAAAGfQMAAAQqBipuAnsEAAAELBICewQAAARvGQAABgIUfQQA
AAQqAAAAEzAFAEkAAAACAAARFgorLgQGlA4EcuAAAHAoLQAACjMZAgUGmgIEBpQoLgAACg4EcwUA
AAZ9BAAABAYXWAoGAzLOAm8fAAAGAm8cAAAGAigdAAAGKjoCKC8AAAoCA30FAAAEKjoCKC8AAAoC
A30GAAAEKpYCewYAAARvMAAACnL0AABwbzEAAAooMgAACm8zAAAKdDMAAAEqlgJ7BgAABG8wAAAK
chIBAHBvMQAACigyAAAKbzMAAAp0MwAAASoeAnsHAAAEKiICA30HAAAEKh4CewgAAAQqIgIDfQgA
AAQqHgJ7CQAABCoiAgN9CQAABCoeAnsKAAAEKiICA30KAAAEKh4CewsAAAQqIgIDfQsAAAQqHgJ7
DAAABCoiAgN9DAAABCoeAnsNAAAEKiICA30NAAAEKh4CKC8AAAoqHgJ7DgAABCoiAgN9DgAABCoe
AnsPAAAEKiICA30PAAAEKh4CexAAAAQqIgIDfRAAAAQqHgJ7EQAABCoiAgN9EQAABCoeAnsSAAAE
KiICA30SAAAEKh4CexMAAAQqIgIDfRMAAAQqHgJ7FAAABCoiAgN9FAAABCoeAnsVAAAEKiICA30V
AAAEKq5+FgAABC0ecigBAHDQCQAAAig0AAAKbzUAAApzNgAACoAWAAAEfhYAAAQqGn4XAAAEKh4C
gBcAAAQqGn4YAAAEKh4CKDcAAAoqLnNJAAAGgBgAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAiA0AACN+AAD0DQAABA0AACNTdHJpbmdzAAAAAPgaAACcAQAAI1VTAJQcAAAQ
AAAAI0dVSUQAAACkHAAApAIAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQkAAAD6ATMAFgAAAQAAADYA
AAAKAAAAGAAAAEoAAAArAAAANwAAAD0AAAACAAAABgAAACYAAAA2AAAAAgAAAAEAAAAHAAAAAQAA
AAEAAAAAAKAGAQAAAAAABgBQBSEKBgDkBSEKBgCcBAMKDwCVCgAABgDJBHAIBgAzBXAIBgAUBXAI
BgDLBXAIBgBwBXAIBgCJBXAIBgDgBHAIBgD7BE8GCgCkBWcDDgDJCVAIBgA6AIsAPwDhCQAABgBS
A74HBgC6CL4HCgCACWcDEgBxCWcDCgAACWcDBgCCBr4HCgDfC2cDBgCHC74HBgBkBCEKBgB/BAMK
BgCRCUEKBgD0CDsIFgBPBIoGFgCwBIoGFgDCAyYIFgAcDI4LFgAYDI4LFgCWCI4LFgCCCAcBFgD4
A44LFgD0A44LBgClB1wABgBJCVwABgBWCVwAGgC9DBoLGgC0CxoLBgCkAr4HBgAQA74HBgBBAL4H
BgCqCL4HHgARAKEJHgABAKEJXwBxDAAAHgAiAKEJBgBpBr4HBgCVA74HBgAcA74HBgD4DHAIAAAA
AEcAAAAAAAEAAQABABAAGwgAABAAAQABAAEAEABhCQAATQACAAUAAQAQAMELAABdAAIAGwABABAA
RQsAAGEABQAgAAEAEADfCgAAYQAGACEAAAAQAAQEKwZhAAcAJAAAABAAeAArBmEADgAzAAAAEABI
CqQKYQAWAEQAAAEQAA4LpAp9ABgASAABABcLEQEGAEULFQEGAN8KGQEGAGEJHQEBAM8LIQEBAM8L
IQEBAJ0BJQEBAIcBKAEBAFUBKwEBACYBLgEBADACNgEBAOQBNgEBAHcCKwEBAHEBNgEBADwBJQEB
ALcBOQEBAM4BOQEBAGICOQEBABoCOQEBAP4BOQEBAEgCOQERAP0HPQERALIDQQERAPQCRQFQIAAA
AADGAAIGBgABAFggAAAAAMYADQYGAAEAYCAAAAAAxgBzCwYAAQAIIgAAAACGGOwJBgABABsiAAAA
AIYY7AmkAAEAJiIAAAAAhgg7CUkBBAA1IgAAAACGCG4HTgEFAEwiAAAAAIYIsgAQAAYAViIAAAAA
hgjIBk4BBwBtIgAAAACGCDoEUwEIAHwiAAAAAIYILwdOAQkAkyIAAAAAhgi8AlkBCgCiIgAAAACG
CNsGTgELALkiAAAAAIYIywJZAQwAyCIAAAAAhgjxBk4BDQDfIgAAAACGCOcCWQEOAO4iAAAAAIYI
GwdOAQ8ABSMAAAAAhgjuB1kBEAAUIwAAAACGCEQHTgERACsjAAAAAIYI5whZARIAOiMAAAAAhgha
B04BEwBRIwAAAACGCNkCWQEUAGAjAAAAAIYIBgdOARUAdyMAAAAAhgCxDAYAFgB/IwAAAACGAJkL
BgAWAIcjAAAAAIYAnAugABYAjyMAAAAAhhjsCQYAFgCvIwAAAADGAWULBgAWALEjAAAAAIEA1QAG
ABYA0CMAAAAAxgBIDF8BFgCvIwAAAADGAXMLBgAaACUkAAAAAIYY7AlrARoANCQAAAAAhhjsCWsB
GwBDJAAAAACGCL4AVAAcAGkkAAAAAIYIiwdUABwAjyQAAAAAhgjaA1QAHACXJAAAAACGCOcDEAAc
AKAkAAAAAIYIiANxAR0AqCQAAAAAhgiRAwEAHQCxJAAAAACGCOkAoAAeALkkAAAAAIYI+ABOAR4A
wiQAAAAAhghmAHUBHwDKJAAAAACGCG8AfgEfANMkAAAAAIYIxAiIASAA2yQAAAAAhgjPCEkBIADk
JAAAAACGCMUHiAEhAOwkAAAAAIYI0gdJASEA9SQAAAAAhgjIDKAAIgD9JAAAAACGCN4MTgEiAAYl
AAAAAIYY7AkGACMADiUAAAAAhghAA4gBIwAWJQAAAACGCEkDSQEjAB8lAAAAAIYIpgBUACQAJyUA
AAAAhgiyABAAJAAwJQAAAACGCB4EjAElADglAAAAAIYIKARZASUAQSUAAAAAhghwBowBJgBJJQAA
AACGCHkGWQEmAFIlAAAAAIYIoQyMAScAWiUAAAAAhgipDFkBJwBjJQAAAACGCAkIjAEoAGslAAAA
AIYIEghZASgAdCUAAAAAhgjfB4wBKQB8JQAAAACGCO4HWQEpAIUlAAAAAIYI2giMASoAjSUAAAAA
hgjnCFkBKgAGJQAAAACGGOwJBgArAAYlAAAAAIMY7AkGACsAliUAAAAAkwiNCZEBKwDCJQAAAACT
CJoDlgErAMklAAAAAJMIpgObASsA0SUAAAAAlgioC6EBLADYJQAAAACGGOwJBgAsAOAlAAAAAJEY
8gmmASwAAAABAIYJAAACAOkKAAADAA4JAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAAB
ABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkG
AAABABkGAAABABkGAAABABkGAAABAGsLAAACAPkJAAADAF0LAAAEAA4JAAABAOULAAABAOULAAAB
ABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkG
AAABABkGAAABABkGAAABABkGAAABABkGAAABABkGAAABABkGCQDsCQEAEQDsCQYAGQDsCQoAKQDs
CRAAMQDsCRAAOQDsCRAAQQDsCRAASQDsCRAAUQDsCRAAWQDsCRAAYQDsCRAAaQDsCQYAyQDsCQYA
0QDsCQYA8QDsCRUAuQACBgYAuQANBgYAAQFIBC4AAQGxAhAAAQFRCzUAGQHRADsAAQESBEEAIQGa
B0cAOQHsCU0AQQGaAlQAcQAfBlgAkQAEA1QASQG4DGQADADeCXIAFADvC4IAiQDsCYcAiQAWCpUA
iQBbA5sAFABUDKAAYQEyBAYAcQDsCQYAmQDsCaQAmQC1B64AmQCDBwEAcQHsCRAAmQCxDAYAmQCZ
CwYAmQCcC6AAuQDsCQYAuQBQALgAuQD9Cr8AwQDsCQYAuQDTCsUAeQGsB8sAuQCMDNIAgQFdDNgA
oQEuA98AoQH0DOgA2QDsCe4A+QDsCQYALgALANwBLgATAOUBLgAbAAQCLgAjAA0CLgArADYCLgAz
ADYCLgA7ADYCLgBDAA0CLgBLADwCLgBTADYCLgBbAFMCQwBjAJ0C4QBrAJ0CAQFrAJ0CIQFrAJ0C
IwFzAJ0CQQFrAJ0CYQFrAJ0CgQFrAJ0CoQFrAJ0CwQFrAJ0C4QFrAJ0CAQJrAJ0CIQJrAJ0CQQJr
AJ0CYQJrAJ0CgQJrAJ0CoQJrAJ0CAQNrAJ0CgARrAJ0CiQR7AAQCoARrAJ0CqQR7AAQCwARrAJ0C
4ARrAJ0CAAVrAJ0CIAVrAJ0CQAVrAJ0CYAVrAJ0CgAVrAJ0CoAVrAJ0CwAVrAJ0C4AVrAJ0CAAZr
AJ0CIAZrAJ0CYAZrAJ0CgAZrAJ0CoAZrAJ0CwAZrAJ0C4AZrAJ0CAAdrAJ0CIAdrAJ0CQAdrAJ0C
YAdrAJ0CgAdrAJ0CoAdrAJ0CwAdrAJ0C4AdrAJ0CAAhrAJ0CIAhrAJ0CQAhrAJ0CGwC0AAMAAQAG
ABMABwAVAAgAHAAJACQACgAmAAAAPwmqAQAAcgeuAQAAyQCyAQAAzAauAQAAPgS2AQAAMweuAQAA
wAK7AQAA3wauAQAAzwK7AQAA9QauAQAA6wK7AQAAHweuAQAA8ge7AQAASAeuAQAA6wi7AQAAXgeu
AQAA3QK7AQAACgeuAQAAwgCyAQAAjweyAQAAFQSyAQAAlQPAAQAA/ACuAQAAfQDEAQAA0wiqAQAA
1geqAQAA4gyuAQAAYgOqAQAAyQCyAQAALAS7AQAAfQa7AQAArQy7AQAAFgi7AQAA8ge7AQAA6wi7
AQAAkQnNAQAAugPSAQAArAvXAQEABgADAAEABwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAEA
DAAPAAEADQARAAEADgATAAEADwAVAAEAEAAXAAEAEQAZAAEAEgAbAAEAEwAdAAEAFAAfAAEAFQAh
AAEAFgAjAAEAFwAlAAIAIgAnAAIAIwApAAIAJAArAAEAJQArAAIAJgAtAAEAJwAtAAIAKAAvAAEA
KQAvAAIAKgAxAAEAKwAxAAIALAAzAAEALQAzAAIALgA1AAEALwA1AAIAMAA3AAEAMQA3AAIAMwA5
AAEANAA5AAIANQA7AAEANgA7AAIANwA9AAEAOAA9AAIAOQA/AAEAOgA/AAIAOwBBAAEAPABBAAIA
PQBDAAEAPgBDAAIAPwBFAAEAQABFAAIAQQBHAAEAQgBHAAIARQBJAAIARgBLAAEARwBLAAIASABN
AGsAewAEgAAAAQAAAAAAAAAAAAAAAAArBgAABAAAAAAAAAAAAAAA9gCCAAAAAAAOAAAAAAAAAAAA
AAD/APsLAAAAAAQAAAAAAAAAAAAAAAgBLwsAAAAADgAAAAAAAAAAAAAA/wAnDAAAAAAEAAAAAAAA
AAAAAAD2AL4HAAAAAAQAAAAAAAAAAAAAAPYAGgsAAAAADgAAAAAAAAAAAAAA/wAYCQAAAAAAAAAA
AQAAAFIKAAA1AF8AAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1
YXRvckNvbnRleHQxMDAATGlzdGAxAEludDY0ADxNb2R1bGU+AEdldE91dHB1dElEAFN5c3RlbS5J
TwBnZXRfRGF0YQBzZXRfRGF0YQBQcmljZURhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25z
LkdlbmVyaWMAZ2V0X1N0b2NrSWQAc2V0X1N0b2NrSWQAZ2V0X0N1cnJlbnRTdG9ja0lkAEFkZABN
YXJrT3V0cHV0c0ZpbmlzaGVkAGdldF9BZ2dyZWdhdGVkAHNldF9BZ2dyZWdhdGVkAFN5c3RlbS5D
b2xsZWN0aW9ucy5TcGVjaWFsaXplZAA8RGF0YT5rX19CYWNraW5nRmllbGQAPFN0b2NrSWQ+a19f
QmFja2luZ0ZpZWxkADxBZ2dyZWdhdGVkPmtfX0JhY2tpbmdGaWVsZAA8VGltZT5rX19CYWNraW5n
RmllbGQAPFR5cGU+a19fQmFja2luZ0ZpZWxkADxSZXNwb25zZT5rX19CYWNraW5nRmllbGQAPENs
b3NlPmtfX0JhY2tpbmdGaWVsZAA8SGlnaD5rX19CYWNraW5nRmllbGQAPFRpbWVGcm9tPmtfX0Jh
Y2tpbmdGaWVsZAA8Vm9sdW1lRnJvbT5rX19CYWNraW5nRmllbGQAPE9wZW4+a19fQmFja2luZ0Zp
ZWxkADxUaW1lVG8+a19fQmFja2luZ0ZpZWxkADxWb2x1bWVUbz5rX19CYWNraW5nRmllbGQAPExv
dz5rX19CYWNraW5nRmllbGQAPEZpcnN0VmFsdWVJbkFycmF5PmtfX0JhY2tpbmdGaWVsZABSZWFk
VG9FbmQARGF0ZVRpbWVLaW5kAHNldF9NZXRob2QAc2V0X0Nsb3NlUHJpY2UAc2V0X0hpZ2hQcmlj
ZQBzZXRfT3BlblByaWNlAHNldF9Mb3dQcmljZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UA
SURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X1RpbWUA
c2V0X1RpbWUARGF0ZVRpbWUAVG9Mb2NhbFRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAZ2V0X1R5cGUAc2V0X1R5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAGdldF9SZXNwb25zZQBzZXRfUmVzcG9uc2UA
SHR0cFdlYlJlc3BvbnNlAFByaWNlUmVzcG9uc2UAR2V0UmVzcG9uc2UAZ2V0X0Nsb3NlAHNldF9D
bG9zZQBEaXNwb3NlAHNldF9QcmljZURhdGUAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUARGVzZXJpYWxpemUAU0Nf
MmQxNDM5MjM0MjFlNGZjMTk5YzIwNjBiOGQwNjJmN2YAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBTdHJpbmcAZ2V0X0hpZ2gAc2V0X0hpZ2gARGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwA
U0NfMmQxNDM5MjM0MjFlNGZjMTk5YzIwNjBiOGQwNjJmN2YuZGxsAHNldF9TdG9ja0lkX0lzTnVs
bABzZXRfQ2xvc2VQcmljZV9Jc051bGwAc2V0X0hpZ2hQcmljZV9Jc051bGwAc2V0X09wZW5Qcmlj
ZV9Jc051bGwAc2V0X0xvd1ByaWNlX0lzTnVsbABzZXRfUHJpY2VEYXRlX0lzTnVsbABzZXRfVm9s
dW1lRnJvbV9Jc051bGwAc2V0X1ZvbHVtZVRvX0lzTnVsbABzZXRfVGltZXN0YW1wX0lzTnVsbABT
ZXROdWxsAGdldF9VcGRhdGVkVXJsAEdldFJlc3BvbnNlU3RyZWFtAGdldF9JdGVtAHNldF9JdGVt
AFN5c3RlbQBnZXRfVGltZUZyb20Ac2V0X1RpbWVGcm9tAGdldF9Wb2x1bWVGcm9tAHNldF9Wb2x1
bWVGcm9tAHJlc291cmNlTWFuAGdldF9PcGVuAHNldF9PcGVuAFNjcmlwdE1haW4AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLldlYi5TY3JpcHQuU2VyaWFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBOYW1lVmFsdWVDb2xsZWN0aW9uAFdlYkhlYWRlckNv
bGxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfVGltZVRvAHNldF9UaW1lVG8A
Z2V0X1ZvbHVtZVRvAHNldF9Wb2x1bWVUbwBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1
dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAHNldF9UaW1lc3RhbXAAU3Ry
ZWFtUmVhZGVyAFRleHRSZWFkZXIAUHJpY2VEYXRhQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlw
dEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUuV3JhcHBlcgBKYXZhU2NyaXB0U2VyaWFsaXplcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3Rv
cgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAEFkZFNlY29uZHMAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzJkMTQzOTIzNDIxZTRmYzE5OWMy
MDYwYjhkMDYyZjdmLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ18yZDE0MzkyMzQyMWU0ZmMxOTljMjA2MGI4ZDA2MmY3Zi5Qcm9wZXJ0aWVzAGdldF9SZWFk
T25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGlu
Z3MAanMAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3lzdGVtLldlYi5FeHRlbnNpb25zAENvbm5lY3Rp
b25zAGdldF9IZWFkZXJzAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dz
AE9iamVjdABTeXN0ZW0uTmV0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3Vs
dABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJl
bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABIdHRwV2ViUmVxdWVzdABNaWNyb3NvZnQu
U3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABNb3ZlTmV4dABHZXRWYWx1ZVdpdGhD
b250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AGdl
dF9Mb3cAc2V0X0xvdwBBZGRSb3cAU2hvdwBNZXNzYWdlQm94AGdldF9GaXJzdFZhbHVlSW5BcnJh
eQBzZXRfRmlyc3RWYWx1ZUluQXJyYXkAZ2V0X0Fzc2VtYmx5AAAAAAAHRwBFAFQAABdDAG8AbgB0
AGUAbgB0AFQAeQBwAGUAACFhAHAAcABsAGkAYwBhAHQAaQBvAG4ALwBqAHMAbwBuAACAm0kAcwBO
AHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQA
bwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABo
AGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAE1AAcgBpAGMAZQBEAGEAdABhAAAd
QwB1AHIAcgBlAG4AdABTAHQAbwBjAGsASQBkAAAVVQBwAGQAYQB0AGUAZABVAHIAbAAAcVMAQwBf
ADIAZAAxADQAMwA5ADIAMwA0ADIAMQBlADQAZgBjADEAOQA5AGMAMgAwADYAMABiADgAZAAwADYA
MgBmADcAZgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAA34x2M
ikumSLfj+XCC2ABoAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF1EgcHDg4SHBURQQESIBIgEUUR
RQYAARKAgQ4FIAASgIkFIAIBDg4FIAASgJEFIAASgJkGIAEBEoCZAyAADgYwAQEeAA4ECgESHAYA
ARGAqQ4GFRI9ARIgCCAAFRFBARMABhURQQESIAQgABMADSAIAQgICAgICAgRgK0FIAERRQ0EIAAR
RQMgAAIJIAMBElEdCBJVBSACAQgcAwcBCAYAAggSVQ4FIAEdCAgFIAASgL0GIAESgMEcBQAAEoDF
BiABHBKAyQgAARKA0RGA1QUgABKA2QcgAgEOEoDZCLd6XFYZNOCJCImEXc2AgMyRCDG/OFatNk41
AwYSOQMGEhQDBhIYAwYSDAMGEl0CBg4CBggCBgIHBhUSPQESIAIGCgMGEVkDBhJtAwYScQMGEigE
IAEBCgQgAQECBSABARFFBSABARFZCyAEAQgdCB0SURJVBSABARJdAyAACAggABUSPQESIAkgAQEV
Ej0BEiADIAAKBCAAEVkEAAASbQQAABJxBQABARJxBAAAEigDAAABAygACgMoAAIDKAAOBCgAEUUE
KAARWQMoAAgIKAAVEj0BEiAECAASbQQIABJxBAgAEigIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzJkMTQzOTIzNDIxZTRmYzE5OWMyMDYwYjhk
MDYyZjdmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEA
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAURgAAAAAAAAAAAAAuRgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
IEYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwD
AAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARM
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADIA
ZAAxADQAMwA5ADIAMwA0ADIAMQBlADQAZgBjADEAOQA5AGMAMgAwADYAMABiADgAZAAwADYAMgBm
ADcAZgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMgBkADEANAAzADkAMgAzADQAMgAx
AGUANABmAGMAMQA5ADkAYwAyADAANgAwAGIAOABkADAANgAyAGYANwBmAC4AZABsAGwAAABIABIA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAg
ADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgA
KAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAyAGQAMQA0ADMAOQAy
ADMANAAyADEAZQA0AGYAYwAxADkAOQBjADIAMAA2ADAAYgA4AGQAMAA2ADIAZgA3AGYALgBkAGwA
bAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMgBkADEANAAzADkAMgAz
ADQAMgAxAGUANABmAGMAMQA5ADkAYwAyADAANgAwAGIAOABkADAANgAyAGYANwBmAAAANAAIAAEA
UAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABANgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_2d143923421e4fc199c2060b8d062f7f</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::CurrentStockId,User::UpdatedUrl</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">45</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData]"
                      hasSideEffects="true"
                      name="PriceData">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[Timestamp]"
                          dataType="i8"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[Timestamp]"
                          name="Timestamp" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[StockId]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[StockId]"
                          name="StockId" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[PriceDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[PriceDate]"
                          name="PriceDate" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[ClosePrice]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[ClosePrice]"
                          name="ClosePrice" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[HighPrice]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[HighPrice]"
                          name="HighPrice" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[LowPrice]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[LowPrice]"
                          name="LowPrice" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[VolumeFrom]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[VolumeFrom]"
                          name="VolumeFrom" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[VolumeTo]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[VolumeTo]"
                          name="VolumeTo" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[OpenPrice]"
                          dataType="decimal"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[OpenPrice]"
                          name="OpenPrice" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Download Stock Data\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RecordCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Download Stock Data\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Download Stock Data\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Download Stock Data\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Download Stock Data\Staging Table"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Staging Table"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Stock].[stgPriceByMinute]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Connections[OleDbConnection]"
                      connectionManagerID="{42F6D32A-F7BB-471D-AD95-CFAF6D29C0BE}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Trading]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[Timestamp]"
                          cachedDataType="i8"
                          cachedName="Timestamp"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[Timestamp]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[PriceDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="PriceDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[PriceDate]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[PriceDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[ClosePrice]"
                          cachedDataType="decimal"
                          cachedName="ClosePrice"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[ClosePrice]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[ClosePrice]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[HighPrice]"
                          cachedDataType="decimal"
                          cachedName="HighPrice"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[HighPrice]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[HighPrice]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[LowPrice]"
                          cachedDataType="decimal"
                          cachedName="LowPrice"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[LowPrice]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[LowPrice]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[VolumeFrom]"
                          cachedDataType="decimal"
                          cachedName="VolumeFrom"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[VolumeFrom]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[VolumeFrom]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[VolumeTo]"
                          cachedDataType="decimal"
                          cachedName="VolumeTo"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[VolumeTo]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[VolumeTo]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[OpenPrice]"
                          cachedDataType="decimal"
                          cachedName="OpenPrice"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[OpenPrice]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[OpenPrice]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].Columns[StockId]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="StockId"
                          externalMetadataColumnId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[StockId]"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData].Columns[StockId]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[Timestamp]"
                          dataType="i8"
                          name="Timestamp" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[PriceDate]"
                          dataType="dbTimeStamp"
                          name="PriceDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[ClosePrice]"
                          dataType="numeric"
                          name="ClosePrice"
                          precision="12"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[HighPrice]"
                          dataType="numeric"
                          name="HighPrice"
                          precision="12"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[LowPrice]"
                          dataType="numeric"
                          name="LowPrice"
                          precision="12"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[OpenPrice]"
                          dataType="numeric"
                          name="OpenPrice"
                          precision="12"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[VolumeFrom]"
                          dataType="numeric"
                          name="VolumeFrom"
                          precision="30"
                          scale="15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[VolumeTo]"
                          dataType="numeric"
                          name="VolumeTo"
                          precision="30"
                          scale="15" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[DateInserted]"
                          dataType="dbTimeStamp"
                          name="DateInserted" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input].ExternalColumns[StockId]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="StockId" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Download Stock Data.Paths[PriceData]"
                  endId="Package\Foreach Loop Container\Download Stock Data\Row Count.Inputs[Row Count Input 1]"
                  name="PriceData"
                  startId="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API.Outputs[PriceData]" />
                <path
                  refId="Package\Foreach Loop Container\Download Stock Data.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Download Stock Data\Staging Table.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Download Stock Data\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update URL with Stock Id"
          DTS:CreationName="Microsoft.ExpressionTask"
          DTS:Description="Expression Task"
          DTS:DTSID="{997B2025-E654-4C84-91CE-563800613CE1}"
          DTS:ExecutableType="Microsoft.ExpressionTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update URL with Stock Id"
          DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ExpressionTask
              Expression="@[User::UpdatedUrl] = REPLACE(@[User::HistoryByMinuteURL], &quot;[FROMSTOCKID]&quot;, @[User::CurrentStockId])" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CAE149DE-873E-4070-9641-FADFD00F6D41}"
          DTS:From="Package\Foreach Loop Container\Update URL with Stock Id"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Download Stock Data" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{A05ED5C3-1CA7-48E0-A4CC-3DEACD42B94F}"
          DTS:ObjectName="{A05ED5C3-1CA7-48E0-A4CC-3DEACD42B94F}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentStockId" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Stock List"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{425f684c-76d5-48aa-9cd6-ea0d4614e3aa}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Stock List"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{42F6D32A-F7BB-471D-AD95-CFAF6D29C0BE}"
          SQLTask:SqlStatementSource="SELECT StockId&#xA;FROM [Lookup].[Stock]&#xA;WHERE [Enabled] = 1"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Stocks" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get URL"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{CCF71588-0B73-405F-A9B1-A7A60FA1DB59}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get URL"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{42F6D32A-F7BB-471D-AD95-CFAF6D29C0BE}"
          SQLTask:SqlStatementSource="EXEC [Config].[GetApiUrlByMethod] 'HistoryByMinute', ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::HistoryByMinuteURL"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Stock Data"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ca521b83-1eef-4de9-8041-7bb040df2e25}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Stock Data"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{42F6D32A-F7BB-471D-AD95-CFAF6D29C0BE}"
          SQLTask:SqlStatementSource="EXEC Stock.ImportPriceByMinute" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Staging Table and Diable Index"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{27C999DB-5DE4-4935-825B-514C9F30E076}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Staging Table and Diable Index"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{42F6D32A-F7BB-471D-AD95-CFAF6D29C0BE}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE Stock.stgPriceByMinute&#xA;GO&#xA;&#xA;IF EXISTS (&#xA;&#x9;&#x9;SELECT 1&#xA;        FROM sys.indexes&#xA;        WHERE [name] = 'IX_stgPriceByMinute_StockId_Timestamp'&#xA;&#x9;)&#xA;DROP INDEX IX_stgPriceByMinute_StockId_Timestamp ON Stock.stgPriceByMinute&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{759C5AA3-FE0F-4DAB-9D75-DA1ED5994AA5}"
      DTS:From="Package\Get Stock List"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Staging Table and Diable Index" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{4815D321-E927-4B93-84FA-66A9C933F271}"
      DTS:From="Package\Get URL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Get Stock List" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{53154085-9B7B-4412-AB81-37C2BABC7E86}"
      DTS:From="Package\Truncate Staging Table and Diable Index"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{D89F3E47-E409-4383-A09A-D2AB3E18C2D1}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Create Index" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{E673C4EA-8372-4F0B-9FE2-959B55A5BB46}"
      DTS:From="Package\Create Index"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Import Stock Data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="180,42.6666666666667"
          Id="Package\Foreach Loop Container\Download Stock Data"
          TopLeft="37.3333283662797,121.633328118523" />
        <NodeLayout
          Size="200.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Update URL with Stock Id"
          TopLeft="27.3333272238573,29.4333285989365" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="127.499994461735,72.0999952656032">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.5333328529202"
              Start="0,0"
              End="0,42.0333328529202">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.0333328529202" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="238.666666666667,218.666666666667"
          Size="238.666666666667,261.333333333334"
          Id="Package\Foreach Loop Container"
          TopLeft="382.916665381442,238.799996218682" />
        <NodeLayout
          Size="144,42.6666666666667"
          Id="Package\Get Stock List"
          TopLeft="432.999998236697,87.8666648689909" />
        <NodeLayout
          Size="118.666666666667,42.6666666666667"
          Id="Package\Get URL"
          TopLeft="441.749993685633,1.09999983727931" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="503.041662627831,43.766666503946">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.0999983650449"
              Start="0,0"
              End="0,36.5999983650449">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5999983650449" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="272,42.6666666666667"
          Id="Package\Truncate Staging Table and Diable Index"
          TopLeft="365.666662171483,163.299997807145" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="503.33333020409,130.533331535658">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.7666662714876"
              Start="0,0"
              End="0,25.2666662714876">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.2666662714876" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="501.958330443129,205.966664473812">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.8333317448701"
              Start="0,0"
              End="0,25.3333317448701">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.3333317448701" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="140,42.6666666666667"
          Id="Package\Create Index"
          TopLeft="430.104161251026,533.208324180295" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="501.1770799829,500.133329552015">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.07499462828"
              Start="0,0"
              End="0,25.57499462828">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.57499462828" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="165.333333333334,42.6666666666667"
          Id="Package\Import Stock Data"
          TopLeft="418.708327481523,613.374996542186" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="500.739577699608,575.874990846962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.5000056952238"
              Start="0,0"
              End="0,30.0000056952238">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.0000056952238" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Download Stock Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="144,42.6666666666667"
          Id="Package\Foreach Loop Container\Download Stock Data\Staging Table"
          TopLeft="330.999994561076,417.166659576694" />
        <NodeLayout
          Size="131.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Download Stock Data\Row Count"
          TopLeft="336.666661649943,333.533327738841" />
        <NodeLayout
          Size="191.333333333334,42"
          Id="Package\Foreach Loop Container\Download Stock Data\Call CryptoCompare API"
          TopLeft="309.833328925074,242.999996048212" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Download Stock Data.Paths[Row Count Output 1]"
          TopLeft="402.666661438843,376.199994405508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.9666651711863"
              Start="0,0"
              End="0,33.4666651711863">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.4666651711863" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Download Stock Data.Paths[PriceData]"
          TopLeft="403.916661954175,284.999996048212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.5333316906292"
              Start="0,0"
              End="0,41.0333316906292">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.0333316906292" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Download Stock Data\Staging Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>